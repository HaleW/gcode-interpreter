{"name":"gcode-interpreter","tagline":"A G-code interpreter for Node.js","body":"# gcode-interpreter [![build status](https://travis-ci.org/cheton/gcode-interpreter.svg?branch=master)](https://travis-ci.org/cheton/gcode-interpreter) [![Coverage Status](https://coveralls.io/repos/cheton/gcode-interpreter/badge.svg?branch=master&service=github)](https://coveralls.io/github/cheton/gcode-interpreter?branch=master)\r\n\r\n[![NPM](https://nodei.co/npm/gcode-interpreter.png?downloads=true&stars=true)](https://nodei.co/npm/gcode-interpreter/)\r\n\r\n## Install\r\n\r\n`npm install --save gcode-interpreter`\r\n\r\n## Usage\r\n\r\n```js\r\nvar GCodeInterpreter = require('gcode-interpreter').GCodeInterpreter;\r\n\r\nvar GCodeRunner = function() {\r\n    var handlers = {\r\n        'G0': (args) => {\r\n            console.log('G0', args);\r\n        },\r\n        'G1': (args) => {\r\n            console.log('G1', args);\r\n        }\r\n    };\r\n\r\n    return new GCodeInterpreter({ handlers: handlers })\r\n};\r\n\r\nvar runner = new GCodeRunner()\r\n\r\n// Interpret G-code from file\r\nvar file = 'example.nc';\r\nrunner.interpretFile(file, function(err, data) {\r\n});\r\n\r\n// Interpret G-code from stream\r\nvar stream = fs.createReadStream(file, { encoding: 'utf8' });\r\nrunner.interpretStream(stream, function(err, data) {\r\n});\r\n\r\n// Interpret G-code from text string\r\nvar text = fs.readFileSync(file, 'utf8');\r\nrunner.interpretText(text, function(err, data) {\r\n});\r\n```\r\n\r\n## Examples\r\n\r\nRun this example with babel-node:\r\n```js\r\nimport { GCodeInterpreter } from 'gcode-interpreter';\r\n\r\nconst GCODE_TEXT = [\r\n    'N1 G17 G20 G90 G94 G54',\r\n    'N2 G0 Z0.25',\r\n    'N3 X-0.5 Y0.',\r\n    'N4 Z0.1',\r\n    'N5 G01 Z0. F5.',\r\n    'N6 G02 X0. Y0.5 I0.5 J0. F2.5',\r\n    'N7 X0.5 Y0. I0. J-0.5',\r\n    'N8 X0. Y-0.5 I-0.5 J0.',\r\n    'N9 X-0.5 Y0. I0. J0.5',\r\n    'N10 G01 Z0.1 F5.',\r\n    'N11 G00 X0. Y0. Z0.25'\r\n].join('\\n');\r\n\r\nclass GCodeRunner extends GCodeInterpreter {\r\n    G17() {\r\n        console.log('G17');\r\n    }\r\n    G20() {\r\n        console.log('G20');\r\n    }\r\n    G90() {\r\n        console.log('G90');\r\n    }\r\n    G94() {\r\n        console.log('G94');\r\n    }\r\n    G54() {\r\n        console.log('G54');\r\n    }\r\n    G0(args) {\r\n        console.log('G0', args);\r\n    }\r\n    G1(args) {\r\n        console.log('G1', args);\r\n    }\r\n    G2(args) {\r\n        console.log('G2', args);\r\n    }\r\n}\r\n\r\nlet runner = new GCodeRunner();\r\n\r\n// optional event callbacks\r\nrunner\r\n    .on('data', (data) => {\r\n        // 'data' event callback\r\n    })\r\n    .on('end', (results) => {\r\n        // 'end' event callback\r\n    });\r\n\r\nrunner.interpretText(GCODE_TEXT, (err, results) => {\r\n});\r\n```\r\n\r\nand you will see the output as below:\r\n```\r\nG17\r\nG20\r\nG90\r\nG94\r\nG54\r\nG0 { Z: 0.25 }\r\nG0 { X: -0.5, Y: 0 }\r\nG0 { Z: 0.1 }\r\nG1 { Z: 0, F: 5 }\r\nG2 { X: 0, Y: 0.5, I: 0.5, J: 0, F: 2.5 }\r\nG2 { X: 0.5, Y: 0, I: 0, J: -0.5 }\r\nG2 { X: 0, Y: -0.5, I: -0.5, J: 0 }\r\nG2 { X: -0.5, Y: 0, I: 0, J: 0.5 }\r\nG1 { Z: 0.1, F: 5 }\r\nG0 { X: 0, Y: 0, Z: 0.25 }\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}